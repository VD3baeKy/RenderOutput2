name: Java CI with Maven

on: 
  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    # 環境変数を更新 - Webhook シークレットも追加
    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      
    # PostgreSQLサービスを追加（テスト用）
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # テスト用ディレクトリと設定ファイル作成 - Webhook シークレットも追加
    - name: Create test directories and configuration
      run: |
        mkdir -p src/test/resources
        echo "spring.datasource.url=${{ secrets.DB_URL }}" > src/test/resources/application-test.properties
        echo "spring.datasource.username=${{ secrets.DB_USERNAME }}" >> src/test/resources/application-test.properties
        echo "spring.datasource.password=${{ secrets.DB_PASSWORD }}" >> src/test/resources/application-test.properties
        echo "spring.datasource.driver-class-name=org.postgresql.Driver" >> src/test/resources/application-test.properties
        echo "spring.jpa.hibernate.ddl-auto=create-drop" >> src/test/resources/application-test.properties
        echo "stripe.api-key=${{ secrets.STRIPE_API_KEY }}" >> src/test/resources/application-test.properties
        echo "stripe.webhook-secret=${{ secrets.STRIPE_WEBHOOK_SECRET }}" >> src/test/resources/application-test.properties

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Run tests with specific profile
      run: mvn test -Dspring.profiles.active=test
      env:
        SPRING_DATASOURCE_URL: ${{ secrets.DB_URL }}
        SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
        STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

    # アーティファクト保存処理
    - name: Create artifact directory
      run: mkdir -p artifact_reports
      
    - name: Copy test reports to artifact directory
      run: cp -r target/surefire-reports/*.html artifact_reports/ || echo "No HTML files to copy"
      
    - name: Save test reports to repository
      if: always()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        mkdir -p test-reports
        cp -r target/surefire-reports/*.html test-reports/ || echo "No HTML files to copy"
        git add test-reports/
        git commit -m "Add test reports from CI run" || echo "No changes to commit"
        git push
